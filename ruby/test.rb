require "pp"
class Com
  attr_accessor :comno, :speed, :parity , :data , :stop
  def initialize
    @comno="3"
    @speed="9600"
    @parity="N"
    @data="8"
    @stop="1"
  end

  def comOpen(n)
    @comno=n.to_s
    modestr = "MODE COM#{@comno} BAUD=#{@speed} PARITY=#{@parity} DATA=#{@data} STOP=#{@stop}"
    system modestr
    @com = open("com#{@comno}", "r+b")#.binmode
  end

  def comClose
    @com.close
  end

  def putbin(x)
    x.each{|d|
#16bitのデータを上位8bit、下位8bitに分けて送信
high=d >> 8
low=d & 255
#puts low.class
puts "0x#{high.to_s(16)}"
puts "0x#{low.to_s(16)}"
      @com.putc(high)  #上位ビット
      @com.putc(low) #下位ビット
@com.flush
sleep(0.05)
#pp @com.methods
#@com.binmode

#@com.write [high].pack("h")
#sleep 0.5
#@com.write [low].pack("h")
#sleep 0.5
    }
    puts "Send"
  end

end

sendData=[
#0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
0x0020,0x607e,0x3184,0x1648,0x0130,0x00c0,0x0700,0xf1fc, 0x1320,0x1020,0x17ff,0x1020,0x1222,0x33fe,0x6800,0xc7ff,
0x0000,0x00f8,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020, 0x0020,0x0020,0x0020,0x1020,0x1840,0x0f80,0x0000,0x0000 ,
0x0020,0x607e,0x3184,0x1648,0x0130,0x00c0,0x0700,0xf1fc, 0x1320,0x1020,0x17ff,0x1020,0x1222,0x33fe,0x6800,0xc7ff,
0x0000,0x00f8,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020, 0x0020,0x0020,0x0020,0x1020,0x1840,0x0f80,0x0000,0x0000 ,
0x0000,0x00f8,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020, 0x0020,0x0020,0x0020,0x1020,0x1840,0x0f80,0x0000,0x0000 ,
0x0000,0x0020,0x0020,0x0020,0x1ffe,0x0020,0x0060,0x00a0,0x00a0,0x0120,0x0220,0x0420,0x1820,0x0020,0x00e0,0x0000
]
	com1=Com.new
	com1.comOpen(3)

12.times do

	com1.putbin(sendData)
#sleep(1)


end
	com1.comClose
puts "Start"
